{% extends '@pulsar/pulsar/components/tab.html.twig' %}
{% import 'helpers/example.html.twig' as docs %}

{% block tab_content %}
<div class="report">
    <p class="lede">Flash messages alert the user when things happen, this may be to confirm that something has occurred successfully, like saving a document, or when something goes wrong. Flash messages may also highlight problems with the system that the user may need to know about, like a loss of network connectivity which is preventing auto-save.</p>
    
    {{ docs.heading('h2', 'Dependencies') }}
    {{ docs.heading('h3', 'Javascript') }}

    <p>You will need the <code>FlashMessageComponent</code> to be included in your browserify configuration.</p>

    <p>Depending on your setup, this will probably need to be in be in a file called <code>index.js</code> or <code>main.js</code>.</p>

    <pre><code lang="javascript">// index.js

var FlashMessageComponent = require('/path/to/pulsar/FlashMessageComponent');

module.exports = {
    FlashMessageComponent: FlashMessageComponent
}</code></pre>

    <pre><code lang="javascript">// main.js

var $html = $('html');

pulsar.flash = new pulsar.FlashMessageComponent($html);

$(function () {
    pulsar.flash.init();
});

// Example usage: pulsar.flash.success('Ermahgherd!');</code></pre>

    {{ docs.heading('h3', 'HTML/Twig') }}

    <p>Your main view should have a container with the classes of flash-container js-flash-container. Any flash messages you choose to generate on page load should be placed here, and any that you subsequently create through the JS methods will also be placed here.</p>

    <div class="flash flash--success"><a class="close" href="#" data-dismiss="flash"><i class="icon-remove"></i></a><i class="icon-ok"></i> This is a success message</div>

    {{ docs.heading('h2', 'Helper options') }}

    <p>You can configure this helper using the <a href="../guides/using-helpers#common-options">common helper options</a>, the following options are specific to this helper.</p>

    <table class="table table--full">
        <thead>
            <tr>
            <th>Option</th>
            <th>Type</th>
            <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>dismissable</td>
                <td>bool</td>
                <td>If <code>false</code>, will hide the dismiss (x) icon (default: <code>true</code>)</td>
            </tr>
            <tr>
                <td>message</td>
                <td>string</td>
                <td>The text to display, can contain HTML/Twig helpers</td>
            </tr>
            <tr>
                <td>type</td>
                <td>string</td>
                <td>The style of message to display <code>success</code>, <code>warning</code>, <code>error</code>, <code>info</code></td>
            </tr>
        </tbody>
    </table>

    {{ docs.heading('h2', 'Icons') }}

    <p>The icon for a flash message is automatically chosen based on the flash message time and can’t be overridden.</p>

    {{ docs.heading('h3', 'Remove dismiss icon') }}

    <p>If you want to disable the ability to close a flash message (useful when you have flash messages in modals, for example), use the dismissable option.</p>

    {{ docs.example({ 
        twig: "
{{
    flash.message({
        'message': 'This flash cannot be dismissed',
        'type': 'error',
        'dismissable': false
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Triggering with JavaScript') }}

    <p>You can throw flash messages with JS, and like the Twig helper your styles and icons will be defined automatically.</p>

    <pre><code lang="javascript">pulsar.flash.success('Something great happened!');</code></pre>
    
    <pre><code lang="javascript">pulsar.flash.error('Oh no! Something bad happened');</code></pre>

    <pre><code lang="javascript">pulsar.flash.warning('Something kinda bad happened, but it’s not critical...');</code></pre>

    <pre><code lang="javascript">pulsar.flash.info('Something interesting happened that we need to tell you about');</code></pre>


</div>
{% endblock tab_content %}
{% block tab_sidebar %}
    {{ docs.toc() }}
{% endblock tab_sidebar %}