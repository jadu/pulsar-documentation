{% extends '@pulsar/pulsar/components/tab.html.twig' %}
{% import 'helpers/example.html.twig' as docs %}

{% block tab_content %}
<div class="report">
    {{
        html.panel({
            'class': 'panel--warning u-margin-top-none',
            'title': 'Deprecated',
            'body': 'These older Tooltips do not meet WCAG 2.1 and therefore should not be used.',
            'icon': 'warning-sign'
        })
    }}
    <p class="lede">Add floating labels that appear on hover or focus to provide supplemental or descriptive information.</p>

    <p>Tooltips can be applied through the use of data-attributes and can be added to regular HTML elements, or to HTML/Form helpers.</p>
    
    {{ docs.heading('h2', 'Basic usage') }}

    {{ docs.example({
        screenreader: "Link, Hover over me, A wild tooltip appears!",
        twig: "
{{
    html.link({
        'href': '#myLink',
        'label': 'Hover over me',
        'title': 'A wild tooltip appears!',
        'data-toggle': 'tooltips'
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Helper options') }}

    <p>You can configure this helper using the <a href="../guides/using-helpers#common-options">common helper options</a>, the following options are specific to this helper.</p>

    <table class="table table--full">
        <thead>
            <tr>
                <th>Option</th>
                <th>Type</th>
                <th>Default</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><code>data-html</code></td>
                <td>boolean</td>
                <td><code>false</code></td>
                <td>Parse the <code>data-content</code> as HTML instead of plain text. Avoid doing this if your popover may contain user-supplied content as this could be used to create an XSS security vulnerability</td>
            </tr>
            <tr>
                <td><code>data-placement</code></td>
                <td>string</td>
                <td><code>right</code></td>
                <td>Where to place the popover, can be <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>, <code>auto</code><br />
                When <code>auto</code> is specified, it will dynamically reorient the tooltip. For example, if placement is <code>auto left</code>, the tooltip will display to the left when possible, otherwise it will display right</td>
            </tr>
            <tr>
                <td><code>data-selector</code></td>
                <td>string</td>
                <td><code>empty</code></td>
                <td>If a selector is provided, tooltip objects will be delegated to the specified targets. in practice, this is used to enable dynamic HTML content to have popovers added</td>
            </tr>
            <tr>
                <td><code>data-title</code></td>
                <td>string</td>
                <td><code>empty</code></td>
                <td>Default title value if title attribute is not present</td>
            </tr>
            <tr>
                <td><code>data-trigger</code></td>
                <td>string</td>
                <td><code>click</code></td>
                <td>How the tooltip is triggered, can be <code>click</code>, <code>hover</code>, <code>focus</code>, <code>manual</td>
            </tr>
            <tr>
                <td><code>data-container</code></td>
                <td>string</td>
                <td><code>empty</code></td>
                <td>Appends the popover to a specific element. Example: <code>body</code>. This option is particularly useful in that it allows you to position the popover in the flow of the document near the triggering element - which will prevent the popover from floating away from the triggering element during a window resize</td>
            </tr>
        </tbody>
    </table>

    {{ docs.heading('h2', 'Placement') }}

    <p>Choose the most appropriate placement to fit your UI, try to avoid the tooltip from obscuring important things when it appears. Use the <code>data-placement</code> attribute.</p>

    <div class="u-text-align-center">
        <button type="button" class="btn btn-default" data-toggle="tooltips" data-placement="left" title="" data-original-title="Tooltip on left">Tooltip on left</button>&nbsp;<button type="button" class="btn btn-default" data-toggle="tooltips" data-placement="top" title="" data-original-title="Tooltip on top">Tooltip on top</button>&nbsp;<button type="button" class="btn btn-default" data-toggle="tooltips" data-placement="bottom" title="" data-original-title="Tooltip on bottom">Tooltip on bottom</button>&nbsp;<button type="button" class="btn btn-default" data-toggle="tooltips" data-placement="right" title="" data-original-title="Tooltip on right">Tooltip on right</button>
    </div>

    {{ docs.heading('h2', 'Tooltips on disabled elements') }}

    <p>Elements with the <code>disabled</code> parameter aren’t interactive and cannot be focused, clicked or hovered which stops tooltips from working entirely. The only way around this which works for all our supported browsers is to wrap the button in a containing <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code>, ideally made focuseable with <code>tabindex="0"</code>, and attach the tooltip to that element.</p>

    <p>{{ html.icon('info-sign', {'class': 'icon--primary'}) }} <code>pointer-events: none;</code> will automatically be applied to all <code>disabled</code> elements within a tooltip wrapper.</p>

    <p>{{ html.icon('universal-access', {'class': 'icon--primary'}) }} The tooltip will not be read by screenreaders</p>

    {{ docs.example({
        screenreader: 'Disabled button, group, you are currently on a button, this item is dimmed',
        twig: '
<div rel="tooltip" data-toggle="tooltips" data-placement="right" title="Can’t touch this" tabindex="0">
  {{ 
    html.button({
      "label": "Disabled Button",
      "disabled": true
    })
  }}
</div>
    ' }) }}

    {{ docs.heading('h2', 'Accessibility') }}

    <p>Tooltips should only be used on elements that can normally be accessed/interacted by keyboard navigation. Although you can make any element focusable with the <code>tabindex="0"</code> attribute this would add potentially confusing tab stops on non-interactive elements for keyboard users and is not recommended (the exception to this is for wrappers around disabled elements, which mimics the previously available keyboard focus on disabled elements).</p>

    <blockquote>Tooltips are popup messages typically triggered by moving a mouse over a control or widget causing a small popup window to appear with additional information about the control. For accessibility, the user should be able to activate tooltips using the keyboard. When a form control or widget receives keyboard focus, the tooltip popup should display. When the form control or widget loses focus, the tooltip should disappear. <cite><a href="https://www.w3.org/wiki/PF/ARIA/BestPractices/Tooltips">https://www.w3.org/wiki/PF/ARIA/BestPractices/Tooltips</a></cite></blockquote>

    <p>This example demonstrates how tooltips can be triggered when tabbing through a form:</p>

    <fieldset>
        <legend class="legend">Tab through this form to trigger tooltips</legend>
        <div class="form__group">
            <label for="inputText1" class="control__label">Text input</label>
            <div class="controls">
                <input id="inputText1" name="inputText1" type="text" class="form__control" data-toggle="tooltips" data-placement="right" title="" data-original-title="Hello!">
            </div>
        </div>
        <div class="form__group">
            <label for="inputText2" class="control__label">Text input</label>
            <div class="controls">
                <input id="inputText2" name="inputText2" type="text" class="form__control" data-toggle="tooltips" data-placement="right" title="" data-original-title="You look nice :)">
            </div>
        </div>
        <div class="form__group">
            <label for="inputText3" class="control__label">Text input</label>
            <div class="controls">
                <input id="inputText3" name="inputText3" type="text" class="form__control" data-toggle="tooltips" data-placement="right" title="" data-original-title="Bye!">
            </div>
        </div>
    </fieldset>

</div>
{% endblock tab_content %}
{% block tab_sidebar %}
    <h4>On this page</h4>
    <ul class="page-nav">
        <li><a href="#basic-usage">Basic usage</a></li>
        <li><a href="#helper-options">Helper options</a></li>
        <li><a href="#placement">Placement</a></li>
        <li><a href="#tooltips-on-disabled-elements">Tooltips on disabled elements</a></li>
        <li><a href="#accessibility">Accessibility</a></li>
    </ul>
{% endblock tab_sidebar %}
