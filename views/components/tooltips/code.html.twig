{% extends '@pulsar/pulsar/components/tab.html.twig' %}
{% import 'helpers/example.html.twig' as docs %}

{% block tab_content %}
<div class="report">

    {{
        html.panel({
            'class': 'panel--info u-margin-top-none',
            'title': 'New in Pulsar 11',
            'body': 'These new WCAG 2.1 compliant tooltips were introduced in Pulsar 11. Details on the previous version which did not meet WCAG 2.1 can be found on the deprecated tab.',
            'icon': 'info-sign'
        })
    }}

    <p class="lede">Add floating labels that appear on hover or focus to provide supplemental or descriptive information.</p>

    <p>Apply a Tooltip to an element by adding <code>data-tooltip-content="your tooltip text"</code>. Tooltips should only be added to elements that can gain focus (buttons, links and form controls).</p>
    
    {{ docs.heading('h2', 'Basic usage') }}

    {{ docs.example({
        screenreader: "Link, Hover over me, A wild tooltip appears!",
        twig: "
{{
    html.link({
        'href': '#myLink',
        'label': 'Hover over me',
        'data-tippy-content': 'A wild tooltip appears!'
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Options') }}

    <p>Tooltip behaviour can be modified if needed by using the following options.</p>

    <table class="table table--full">
        <thead>
            <tr>
                <th>Option</th>
                <th>Type</th>
                <th>Default</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><code>data-tippy-allowHTML</code></td>
                <td>boolean</td>
                <td><code>false</code></td>
                <td>Parse the tooltip content as HTML instead of plain text. Avoid doing this if your tooltip may contain user-supplied content as this could be used to create an XSS security vulnerability</td>
            </tr>
            <tr>
                <td><code>data-tippy-appendTo</code></td>
                <td>string</td>
                <td><code>body</code></td>
                <td>Appends the popover to a specific element. Example: <code>body</code>. By default, tooltips are appended to the <code>body</code> element to prevent overflow issues.</td>
            </tr>

            <tr>
                <td><code>data-tippy-placement</code></td>
                <td>string</td>
                <td><code>top</code></td>
                <td>Where to place the popover, can be <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code><br />
                If a Tooltip cannot fit within its desired placement, it will instead display in the opposite position if there is not enough space.
            </tr>
        </tbody>
    </table>

    <p>As Tooltips use the Tippy.js library, additional configuration options can be found in the <a href="https://atomiks.github.io/tippyjs/all-props/" target="_blank">Tippy.js documentation</a> though these should generally not be needed. If other options not listed above are used, care should be taken to ensure none of the default Pulsar options that help Tooltips meet WCAG 2.1 are overridden (such as the <code>interactive</code> option).</p>

    {{ docs.heading('h2', 'Placement') }}

    <p>By default Tooltips display above the triggering element. If there isn't enough space, it will instead display in the opposite position (below the triggering element). You can change the default placement by using the <code>data-tippy-placement</code> attribute. Choose the most appropriate placement to fit your UI, try to avoid the tooltip from obscuring important things when it appears.</p>

    <div class="u-text-align-center">
        <button type="button" class="btn btn-default" data-tippy-content="Tooltip on left" data-tippy-placement="left">Tooltip on left</button>&nbsp; <button type="button" class="btn btn-default" data-tippy-content="Tooltip on top">Tooltip on top</button>&nbsp; <button type="button" class="btn btn-default" data-tippy-content="Tooltip on bottom" data-tippy-placement="bottom">Tooltip on bottom</button>&nbsp; <button type="button" class="btn btn-default" data-tippy-content="Tooltip on right" data-tippy-placement="right">Tooltip on right</button>
    </div>

    {{ docs.heading('h2', 'Tooltips on disabled elements') }}

    <p>If an element is <code>disabled</code>, you will need to use a wrapper element (<code>&lt;span&gt;</code> or <code>&lt;div&gt;</code>) made focuseable with <code>tabindex="0"</code>, and attach the tooltip to that element. Elements with the disabled attribute aren't interactive, meaning users cannot focus, hover, or click them to trigger a Tooltip.</p>

    <p>{{ html.icon('universal-access', {'class': 'icon--primary'}) }} The tooltip will not be read by screenreaders and therefore this pattern should be avoided.</p>

    {{ docs.example({
        screenreader: 'Disabled button, group, you are currently on a button, this item is dimmed',
        twig: '
<div data-tippy-content="Canâ€™t touch this" tabindex="0" class="u-display-inline-block">
  {{ 
    html.button({
      "label": "Disabled Button",
      "disabled": true
    })
  }}
</div>
    ' }) }}

    {{ docs.heading('h2', 'Accessibility') }}

    <p>Tooltips should only be applied to natively focusable elements. Although you can make any element focusable with the <code>tabindex="0"</code> attribute this would add potentially confusing tab stops on non-interactive elements for keyboard users and is not recommended (the exception to this is for wrappers around disabled elements, which mimics the previously available keyboard focus on disabled elements).</p>

    <p>Tooltips generated using the methods detailed above meet the requirements of <a href="https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html" target="_blank">WCAG 2.1 1.4.13: Content on Hover or Focus</a>, namely:</p>

    <dl>
        <dt>Dismissible</dt>
        <dd>Tooltips can be dismissed with the <code>ESC</code> key</dd>

        <dt>Hoverable</dt>
        <dd>Tooltip content can be hovered without the tooltip disappearing</dd>

        <dt>Persistent</dt>
        <dd>Tooltips are shown until the hover or focus trigger is removed or the user dismisses it with the <code>ESC</code> key</dd>
    </dl>
</div>
{% endblock tab_content %}
{% block tab_sidebar %}
    {{ docs.toc() }}
{% endblock tab_sidebar %}