{% extends '@pulsar/pulsar/components/tab.html.twig' %}
{% import 'helpers/example.html.twig' as docs %}

{% block tab_content %}
<div class="report">
    <p class="lede">Provide up-to-date feedback on the progress of a workflow or action with simple progress bars.</p>

    {{ docs.heading('h2', 'Basic usage') }}

    {{ docs.example({
        twig: "
{{
    html.progress({
        'value': 25,
        'aria-label': 'File upload progress'
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Helper options') }}

    <p>You can configure this helper using the <a href="../guides/using-helpers#common-options">common helper options</a>, the following options are specific to this helper.</p>

    <table class="table table--full">
        <thead>
            <tr>
                <th>Option</th>
                <th>Type</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><code>label</code></td>
                <td>string</td>
                <td>An optional text label to display inside the progress bar</td>
            </tr>
            <tr>
                <td><code>value</code></td>
                <td>integer</td>
                <td>The percentage value of the progress bar (without the % symbol)</td>
            </tr>
            <tr>
                <td><code>value_visible</code></td>
                <td>bool</td>
                <td>If <code>true</code>, shows the value percentage within the progress bar</td>
            </tr>
        </tbody>
    </table>

    {{ docs.heading('h2', 'Accessibility') }}

    <p>To ensure screen readers users are able to disern the purpose of elements with <code>role="progressbar"</code> an accessible name must be used. This can be via <code>aria-label</code> or if another visible element exists as a title for the progress bar, <code>aria-labelledby</code>.</p>

    {{ docs.heading('h2', 'Updating progress with JavaScript') }}

    <p>Given the rendered markup example below, you’ll need to write code to update the two main percentage values in <code>aria-valuenow</code> and the inline style attribute with your new percentage. If you have the percentage in the label either hidden or visible then you’ll need to update that too.</p>

    <p>You should also add a live region to the DOM, which your code updates to communicate progress updates to screen reader users.</p>

    <p>For example: when loading <code>&lt;span id="progress-live-region" class="hide" aria-live="polite"&gt;23%&lt;/span&gt;</code> and when completed <code>&lt;span id="progress-live-region" class="hide" aria-live="polite"&gt;loading complete&lt;/span&gt;</code></p>

    {{ docs.example({
        html: '
<div class="progress">
    <div
        class="progress-bar"
        role="progressbar"
        aria-label="File upload progress"
        aria-valuenow="25"
        aria-valuemin="0"
        aria-valuemax="100"
        style="width: 25%;"
    >
        25%
    </div>
</div>
<span id="progress-live-region" class="hide" aria-live="polite">25%</span>
    ' }) }}
</div>
{% endblock tab_content %}
{% block tab_sidebar %}
    {{ docs.toc() }}
{% endblock tab_sidebar %}