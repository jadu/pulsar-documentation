{% extends '@pulsar/pulsar/components/tab.html.twig' %}
{% import 'helpers/example.html.twig' as docs %}

{% block tab_content %}
<div class="report">
    <p class="lede">The select2 helper is like a regular select but adds extra functionality such as quicksearch, and the ability to add custom markup to your results.</p>

    {{ docs.heading('h2', 'Dependencies') }}

    <p>Pulsar uses its own <a href="https://github.com/jadu/selectWoo">fork of SelectWoo</a>, which contains additional accessibility enhancements over the <a href="https://github.com/woocommerce/selectWoo">original selectWoo</a> which in turn offers better accessibility support over the <a href="https://select2.org/">original select2</a>.</p>

    <p>You can find more information about the Jadu branch of selectWoo, such as screen reader coverage and known bugs on the <a href="https://github.com/jadu/selectWoo">Jadu/selectWoo GitHub repo</a></p>

    {{ docs.heading('h3', 'package.json') }}

    <p>The following should be included in your product’s <code>package.json</code> file.</p>

    <pre><code lang="javascript">"dependencies": {
    ...
    "select2": "github:jadu/selectWoo#jadu-1.1.3",
}
</code></pre>
    
    {{ docs.heading('h3', 'index.js') }}

<pre><code lang="javascript">var PulsarFormComponent = require('/path/to/pulsar/PulsarFormComponent');

$(function () {
    var $html = $('html');

    pulsarForm = new PulsarFormComponent($html);
    pulsarForm.init();
});
</code></pre>

    <p>This will then initialise all select elements with the <code>js-select2</code> class (which will be included automatically if you’re using the helpers).</p>

    {{ docs.heading('h2', 'Basic usage') }}

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'Pick a colour',
        'id': 'select-1',
        'placeholder': 'Please choose',
        'options': [
            {
                'label': 'Red',
                'value': 'colour_red'
            },
            {
                'label': 'Blue',
                'value': 'colour_blue'
            }
        ]
    })
}}
    " }) }}
    
    {{ docs.heading('h2', 'Helper options') }}

    <p>You can configure this helper using the <a href="../guides/using-helpers#common-options">common helper options.</a></p>

    <table class="table table--full">
        <thead>
            <tr>
            <th>Option</th>
            <th>Type</th>
            <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>multiple</td>
                <td>boolean</td>
                <td>Whether multiple options can be selected (default: <code>false</code>)</td>
            </tr>
            <tr>
                <td>options</td>
                <td>array</td>
                <td>An array of labels and values to use as <code>options</code></td>
            </tr>
            <tr>
                <td>placeholder</td>
                <td>string</td>
                <td>The placeholder to show when no values are selected</td>
            </tr>
            <tr>
                <td>selected</td>
                <td>string</td>
                <td>The <code>value</code> of the item in <code>options</code> that should be initially selected</td>
            </tr>
            <tr>
                <td>size</td>
                <td>int</td>
                <td>The number of <code>options</code> to display when the list is shown</td>
            </tr>
        </tbody>
    </table>

    {{ docs.heading('h2', 'Selected option') }}

    <p>Set the currently selected item by passing the option's <code>value</code> to the main <code>selected</code> option.</p>

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'Pick a colour',
        'id': 'select-2',
        'selected': 'colour_blue',
        'options': [
            {
                'label': 'Red',
                'value': 'colour_red'
            },
            {
                'label': 'Blue',
                'value': 'colour_blue'
            }
        ]
    })
}}
    " }) }}

    <p>For multiple selects, pass the selected values as an array</p>

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'Pick colours',
        'id': 'select-2-multi',
        'multiple': true,
        'selected': ['colour_red', 'colour_blue'],
        'options': [
            {
                'label': 'Red',
                'value': 'colour_red'
            },
            {
                'label': 'Blue',
                'value': 'colour_blue'
            }
        ]
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Disabled input') }}

    <p>Add the <code>'disabled': true</code> option to disable the field on load. See the <a href="../guides/disabling-elements">disabling elements guide</a> for more information about how to disable elements via javascript. Provide help text or information within the UI where possible to explain why elements are disabled.</p>

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'Pick a colour',
        'id': 'select-3',
        'disabled': true,
        'selected': 'color',
        'placeholder': 'Please choose',
        'options': [
            {
                'label': 'Red',
                'value': 'colour_red'
            },
            {
                'label': 'Blue',
                'value': 'colour_blue'
            }
        ]
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Disabled option') }}

    <p>Disable individual options by adding the <code>disabled</code> attribute to the option you want to disable.</p>

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'Pick a colour',
        'id': 'select-4',
        'placeholder': 'Please choose',
        'options': [
            {
                'label': 'Red',
                'value': 'colour_red',
                'disabled': true
            },
            {
                'label': 'Blue',
                'value': 'colour_blue'
            }
        ]
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Placeholder') }}

    <p>Placeholders can be set using the <code>placeholder</code> option. Note: for single select select2s, select2 requires an empty option for use with the placeholder. This will be added automatically if you are using the <code>form.select2</code> helper.</p>

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'My label',
        'id': 'select-5',
        'placeholder': 'Please choose',
        'options': [
            {
                'label': 'Red',
                'value': 'colour_red'
            },
            {
                'label': 'Blue',
                'value': 'colour_blue'
            }
        ]
    })
}}
    " }) }}

    {{ docs.heading('h2', 'Using optgroups') }}

    <p>Your options can be arranged within optgroups using the <code>optgroup</code> nested syntax.</p>

    {{ docs.example({
        twig: "
{{
    form.select2({
        'label': 'My label',
        'id': 'select-6',
        'options':
        [
            {
                'label': 'optgroup one',
                'options': [
                    {
                        'label': 'alpha',
                        'value': 'val-alpha'
                    },
                    {
                        'label': 'bravo',
                        'value': 'val-bravo'
                    }
                ]
            },
            {
                'label': 'optgroup two',
                'options': [
                    {
                        'label': 'charlie',
                        'value': 'val-charlie'
                    },
                    {
                        'label': 'delta',
                        'value': 'val-delta'
                    }
                ]
            }
        ]
    })
}}
    " }) }}

</div>
{% endblock tab_content %}
{% block tab_sidebar %}
    {{ docs.toc() }}
{% endblock tab_sidebar %}